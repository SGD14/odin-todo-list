(()=>{"use strict";const e=(()=>{const e=(e,a)=>({getName:()=>e,setName:t=>{e=t,o()},getTodoList:()=>a,addNewTodo:(e,i,s,r)=>{a.push(t(e,i,s,r,!1)),o()},removeTodo:e=>{a.splice(a.indexOf(e),1),o()}}),t=({title:e,description:t,dueDate:o,priority:a,completed:i})=>({getTitle:()=>e,setTitle:t=>{e=t,saveData()},getDescription:()=>t,setDescription:e=>{t=e,saveData()},getDueDate:()=>o,setDueDate:e=>{o=e,saveData()},getPriority:()=>a,setPriority:e=>{a=e,saveData()},getCompleted:()=>i,setCompleted:e=>{i=e,saveData()}}),o=()=>{const e=a.map((e=>({name:e.getName(),todoList:e.getTodoList().map((e=>({title:e.getTitle(),description:e.getDescription(),dueDate:e.getDueDate(),priority:e.getPriority(),completed:e.getCompleted()})))})));localStorage.setItem("TodoDatabase",JSON.stringify(e))};let a=(()=>{let o=JSON.parse(localStorage.getItem("TodoDatabase"));return o?o.map((o=>e(o.name,o.todoList.map((e=>t(e.title,e.description,e.dueDate,e.priority,e.completed)))))):[e("Default Project",[])]})();return{getProjects:()=>a,addNewProject:t=>{a.push(e(t,[])),o()},removeProject:e=>{a.splice(a.indexOf(e),1),o()}}})();console.log(e.getProjects())})();
//# sourceMappingURL=main.js.map