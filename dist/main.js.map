{"version":3,"file":"main.js","mappings":"mBAAA,MAqGA,EArGqB,MACjB,MAAMA,EAAgB,CAACC,EAAMC,KAmBlB,CAACC,QAlBQ,IAAMF,EAkBLG,QAjBAC,IACbJ,EAAOI,EACPC,GAAoB,EAeEC,YAZN,IAAML,EAYaM,WAVpB,CAACC,EAAOC,EAAaC,EAASC,KAC7CV,EAASW,KAAKC,EAAWL,EAAOC,EAAaC,EAASC,GAAU,IAChEN,GAAoB,EAQ2BS,WAL/BC,IAChBd,EAASe,OAAOf,EAASgB,QAAQF,GAAO,GACxCV,GAAoB,IAMtBQ,EAAa,EAAEL,QAAOC,cAAaC,UAASC,WAAUO,gBAgCjD,CAACC,SA/BS,IAAMX,EA+BLY,SAzBAC,IACdb,EAAQa,EACRC,UAAU,EAuBcC,eA9BL,IAAMd,EA8Bee,eApBpBC,IACpBhB,EAAcgB,EACdH,UAAU,EAkB8CI,WA7BzC,IAAMhB,EA6B+CiB,WAfpDC,IAChBlB,EAAUkB,EACVN,UAAU,EAasEO,YA5BhE,IAAMlB,EA4BuEmB,YAV5EC,IACjBpB,EAAWoB,EACXT,UAAU,EAQgGU,aA3BzF,IAAMd,EA2BiGe,aALtGC,IAClBhB,EAAYgB,EACZZ,UAAU,IAMZjB,EAAqB,KACvB,MAAM8B,EAAOC,EAAYC,KAAIC,IAAoB,CAC7CtC,KAAMsC,EAAQpC,UACdD,SAAUqC,EAAQhC,cAAc+B,KAAItB,IAAiB,CACjDP,MAAOO,EAAKI,WACZV,YAAaM,EAAKQ,iBAClBb,QAASK,EAAKW,aACdf,SAAUI,EAAKc,cACfX,UAAWH,EAAKiB,uBAIxBO,aAAaC,QAAQ,eAAgBC,KAAKC,UAAUP,GAAM,EAc9D,IAAIC,EAXyB,MACzB,IAAIO,EAAeF,KAAKG,MAAML,aAAaM,QAAQ,iBAEnD,OAAGF,EACQA,EAAaN,KAAIC,GACpBvC,EAAcuC,EAAQtC,KAAMsC,EAAQrC,SAASoC,KAAItB,GAC7CF,EAAWE,EAAKP,MAAOO,EAAKN,YAAaM,EAAKL,QAASK,EAAKJ,SAAUI,EAAKG,gBAEhF,CAACnB,EAAc,kBAAmB,IAAI,EAG/B+C,GAclB,MAAO,CAACC,YAZY,IAAMX,EAYLY,cAVEhD,IACnBoC,EAAYxB,KAAKb,EAAcC,EAAM,KACrCK,GAAoB,EAQY4C,cALbX,IACnBF,EAAYpB,OAAOoB,EAAYnB,QAAQqB,GAAU,GACjDjC,GAAoB,EAI3B,EAnGoB,GCUrB6C,QAAQC,IAAI,gB","sources":["webpack://odin-todo-list/./src/TodoDatabase.js","webpack://odin-todo-list/./src/index.js"],"sourcesContent":["const TodoDatabase = (() => {\n    const createProject = (name, todoList) => {\n        const getName = () => name;\n        const setName = (newName) => {\n            name = newName;\n            saveToLocalStorage();\n        }\n\n        const getTodoList = () => todoList;\n\n        const addNewTodo = (title, description, dueDate, priority) => {\n            todoList.push(createTodo(title, description, dueDate, priority, false));\n            saveToLocalStorage();\n        }\n\n        const removeTodo = (todo) => {\n            todoList.splice(todoList.indexOf(todo), 1);\n            saveToLocalStorage();\n        }\n\n        return {getName, setName, getTodoList, addNewTodo, removeTodo};\n    }\n\n    const createTodo = ({title, description, dueDate, priority, completed}) => {\n        const getTitle = () => title;\n        const getDescription = () => description;\n        const getDueDate = () => dueDate;\n        const getPriority = () => priority;\n        const getCompleted = () => completed;\n\n        const setTitle = (newTitle) => {\n            title = newTitle;\n            saveData();\n        }\n\n        const setDescription = (newDescription) => {\n            description = newDescription;\n            saveData();\n        }\n\n        const setDueDate = (newDueDate) => {\n            dueDate = newDueDate;\n            saveData();\n        }\n\n        const setPriority = (newPriority) => {\n            priority = newPriority;\n            saveData();\n        }\n\n        const setCompleted = (newCompleted) => {\n            completed = newCompleted;\n            saveData();\n        }\n\n        return {getTitle, setTitle, getDescription, setDescription, getDueDate, setDueDate, getPriority, setPriority, getCompleted, setCompleted};\n    }\n\n    const saveToLocalStorage = () => {\n        const data = projectList.map(project => { return {\n            name: project.getName(),\n            todoList: project.getTodoList().map(todo => { return {\n                title: todo.getTitle(),\n                description: todo.getDescription(),\n                dueDate: todo.getDueDate(),\n                priority: todo.getPriority(),\n                completed: todo.getCompleted()\n            }})\n        }});\n\n        localStorage.setItem(\"TodoDatabase\", JSON.stringify(data));\n    }\n\n    const loadFromLocalStorage = () => {\n        let savedStorage = JSON.parse(localStorage.getItem(\"TodoDatabase\"));\n\n        if(savedStorage)\n            return savedStorage.map(project => \n                createProject(project.name, project.todoList.map(todo => \n                    createTodo(todo.title, todo.description, todo.dueDate, todo.priority, todo.completed))));\n\n        return [createProject(\"Default Project\", [])];\n    }\n\n    let projectList = loadFromLocalStorage();\n\n    const getProjects = () => projectList;\n\n    const addNewProject = (name) => {\n        projectList.push(createProject(name, []));\n        saveToLocalStorage();\n    };\n\n    const removeProject = (project) => {\n        projectList.splice(projectList.indexOf(project), 1);\n        saveToLocalStorage();\n    };\n\n    return {getProjects, addNewProject, removeProject};\n})();\n\nexport default TodoDatabase;","import TodoDatabase from './TodoDatabase';\n\nconst createProjectsMenu = (projectList) => {\n\n}\n\nconst createTodosMenu = (todoList) => {\n\n}\n\nconsole.log(TodoDatabase.getProjects());"],"names":["createProject","name","todoList","getName","setName","newName","saveToLocalStorage","getTodoList","addNewTodo","title","description","dueDate","priority","push","createTodo","removeTodo","todo","splice","indexOf","completed","getTitle","setTitle","newTitle","saveData","getDescription","setDescription","newDescription","getDueDate","setDueDate","newDueDate","getPriority","setPriority","newPriority","getCompleted","setCompleted","newCompleted","data","projectList","map","project","localStorage","setItem","JSON","stringify","savedStorage","parse","getItem","loadFromLocalStorage","getProjects","addNewProject","removeProject","console","log"],"sourceRoot":""}